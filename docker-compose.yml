version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword    # Senha do usuário root
      MYSQL_DATABASE: produto_db            # Banco de dados para produtos
      MYSQL_USER: myuser                    # (Opcional) Usuário adicional
      MYSQL_PASSWORD: myuserpassword        # (Opcional) Senha para o usuário adicional
    volumes:
      - mysql_data:/var/lib/mysql
      - ./initdb:/docker-entrypoint-initdb.d  # Scripts de inicialização (para produto_db, se houver)
    ports:
      - "3306:3306"

  mysql_cliente:
    image: mysql:8.0
    container_name: mysql_cliente
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: cliente_db
    volumes:
      - mysql_cliente_data:/var/lib/mysql
      - ./initdb/cliente_init.sql:/docker-entrypoint-initdb.d/cliente_init.sql
    ports:
      - "3307:3306"


  mysql_venda:
    image: mysql:8.0
    container_name: mysql_venda
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: venda_db
    volumes:
      - mysql_venda_data:/var/lib/mysql
      - ./initdb/venda_init.sql:/docker-entrypoint-initdb.d/venda_init.sql
    ports:
      - "3308:3306"

  produto-service:
    build: ./produto-service
    container_name: produto-service
    restart: always
    environment:
      MYSQL_HOST: mysql
      MYSQL_USER: root
      MYSQL_PASSWORD: rootpassword
      MYSQL_DATABASE: produto_db
    ports:
      - "3000:3000"
    depends_on:
      - mysql

  cliente-service:
    build: ./cliente-service
    container_name: cliente-service
    restart: always
    environment:
      MYSQL_HOST: mysql_cliente
      MYSQL_USER: root
      MYSQL_PASSWORD: rootpassword
      MYSQL_DATABASE_CLIENTE: cliente_db
    ports:
      - "5000:5000"
    depends_on:
      - mysql_cliente

  venda-service:
    build: ./venda-service
    container_name: venda-service
    restart: always
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql_venda:3306/venda_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: rootpassword
    ports:
      - "8080:8080"
    depends_on:
      - mysql_venda

  frontend-service:
    build: ./frontend-service
    container_name: frontend-service
    restart: always
    ports:
      - "80:80"
    depends_on:
      - produto-service
      - cliente-service
      - venda-service

volumes:
  mysql_data:
  mysql_cliente_data:
  mysql_venda_data:
